#!/usr/bin/python
##############################################
### FETCH COPY - (fbsmi2017-03-03 09:21:14.539774) - download a fresh copy if necessary
##############################################


# check files generated by Kai's script for writing gctf local UVA values to a new starfile
# the script makes errors if the _local.star file is missing or sometimes for unknown reasons...



import sys
if len(sys.argv) != 2:
    sys.exit('USAGE: gCTF_localUVA_errorcheck.py <localUVA starfile>')

###---------function: read the star file get the header, labels, and data -------------#######
def read_starfile(f):
    alldata = open(f,'r').readlines()
    labelsdic = {}
    data = []
    header = []
    for i in alldata:
        if '#' in i:
            labelsdic[i.split('#')[0]] = int(i.split('#')[1])-1
        if len(i.split()) > 3:
            data.append(i.split())
        if len(i.split()) < 3:
            header.append(i.strip("\n"))
    return(labelsdic,header,data)
#---------------------------------------------------------------------------------------------#



starfile = sys.argv[1]
(labels,header,data) = read_starfile(starfile)
badlines = []
goodlines = []
for i in data:
    if len(i) < len(labels):
        diff = len(i) - len(labels)
        if '.mrc' in i[labels['_rlnImageName '] + diff]:
            badlines.append(i[labels['_rlnImageName ']+diff])
        else:
            badlines.append(i[labels['_rlnImageName ']-diff])
    if len(i) == len(labels):
        goodlines.append(' '.join(i))

for i in badlines:
    print(i)
print('{0} lines skipped'.format(len(badlines)))

if len(goodlines) == len(data):
    sys.exit('No errors found')

outfile = starfile.split('.')[0]+'_fixed.star'
output = open(outfile,'w')
for i in header:
    output.write('{0}\n'.format(i))
for i in goodlines:
    output.write('{0}\n'.format(i))